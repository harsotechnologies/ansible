---
- name: Instalacion de agente elastic
  hosts: all
  vars:
    status_ok: 'Status: HEALTHY'
    cert_thumbprint: 460bac6411726f1fd2a321dffbd976df6a603226
    cert_src_path: ./Certificado_ELK/ca.crt # nombre de certificado MUST be ca.crt
    elastic_fqdn: hsoescluster-es-http.hsoelk.svc
    elastic_ip: 10.1.2.207
    fleetserver_fqdn: hso-fleet-server-agent-http.hsoelk.svc
    fleetserver_ip: 10.1.2.209
  tasks:
    - name: Verificar privilegios de Administrador
      become: true
      become_method: runas
      become_user: SYSTEM
      ansible.windows.win_whoami:
      register: whoami

    - name: Mostrar Privilegios
      ansible.builtin.debug: # El usuario tiene que tener privilegio SYSTEM | HIGH, SeDebugPrivilege: enabled y rights: SeBatchLogonRight | SeNetworkLogonRight
        msg: "Privilegio: {{ whoami.label.account_name }} SeDebugPrivilege: {{ whoami.privileges.SeDebugPrivilege }} Rights: {{ whoami.rights }}"

    - name: Validar si elastic agente se encuentra instalado
      ignore_errors: true
      ansible.windows.win_service:
        name: Elastic Agent
        start_mode: auto
        state: started
      register: elastic

    - name: Validar si certificado esta instalado
      community.windows.win_certificate_info:
        store_name: Root
        thumbprint: '{{ cert_thumbprint }}'
      register: ca

    - name: Copiar Certificado en Servidor
      ansible.windows.win_copy:
        src: '{{ cert_src_path }}'
        dest: C:\Temp\
      when: not ca.exists

    - name: Instalar CA en Servidor
      # become: yes
      # become_method: runas
      # become_user: SYSTEM
      ansible.windows.win_certificate_store:
        path: C:\Temp\ca.crt
        file_type: pem
        store_location: LocalMachine
        store_name: Root
        key_storage: machine
        state: present
      when: not ca.exists

    - name: Configurar archivo host con fleet Server y Elastic Search
      community.windows.win_hosts:
        state: present
        canonical_name: "{{ item.nombre }}"
        ip_address: "{{ item.ip }}"
      loop:
        - { nombre: '{{ elastic_fqdn }}', ip: '{{ elastic_ip }}' }
        - { nombre: '{{ fleetserver_fqdn }}', ip: '{{ fleetserver_ip }}' }

    # - name: Configurar DNS
      # ansible.windows.win_dns_client:
        # adapter_names: '*'
        # dns_servers:
        # - 172.25.10.25
        # log_path: C:\dns_log.txt
    
    - name: Crear directorio Temp
      ansible.windows.win_file:
        path: C:\Temp\
        state: directory
      when: not elastic.exists

    - name: Ejecutar script powershell instalar elastic-agent
      become: true
      become_method: runas
      become_user: SYSTEM
      ansible.windows.win_powershell:
        script: |
          $ProgressPreference = 'SilentlyContinue'
          cd C:\Temp
          Invoke-WebRequest -Uri https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.4.3-windows-x86_64.zip -OutFile elastic-agent-8.4.3-windows-x86_64.zip
          Expand-Archive .\elastic-agent-8.4.3-windows-x86_64.zip -DestinationPath .
          cd elastic-agent-8.4.3-windows-x86_64
          .\elastic-agent.exe install --non-interactive --url=https://hso-fleet-server-agent-http.hsoelk.svc:8220 --enrollment-token=bHdlQzdZTUIxdi1oa0FiTW0zZGU6NzVqb1hpdWxUTUtXYnVBcDhlLVc2QQ==
      register: install
      when: not elastic.exists

    - name: Mensaje de Instalacion
      ansible.builtin.debug:
        msg: '{{ install }}'

    - name: Borrar contenido de directorio Temp
      ansible.windows.win_file:
        path: C:\Temp\
        state: absent
