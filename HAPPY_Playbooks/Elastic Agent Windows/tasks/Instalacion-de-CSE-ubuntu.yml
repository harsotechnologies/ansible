---
#Versiones ubuntu 20.04-22.04
- name: playbook1
  hosts: Pruebas-CSE
  become: true
  gather_facts: false
  vars: 
    url_installer: 'https://console.amp.cisco.com/install_packages/393061cf-f40a-4153-8b7f-2fbbe453ed6a/download?product=LinuxProduct&product_variant_id=a1ef784e-3aea-41ae-8725-9d4ad08eb4ea'
    local_installer_path: '/tmp/cse-agent/amp_Monitoreo_Semanal_ubuntu-20-04-amd64.deb'
    ansible_python_interpreter: /usr/bin/python3.10
    ansible_become_pass: 'Emalacm1pt$'
    
  tasks:
   
    - name: Obtener información sobre los servicios
      service_facts:

    - name: Verificar si el servicio cisco-amp está activo
      debug:
        msg: "El servicio Cisco AMP está activo."
      when: "'cisco-amp.service' in ansible_facts.services and ansible_facts.services['cisco-amp.service'].state == 'running'"

    - name: Iniciar el servicio si no está activo
      service:
        name: cisco-amp
        state: started
      when: "'cisco-amp.service' not in ansible_facts.services or ansible_facts.services['cisco-amp.service'].state != 'running'"

    - name: Instalar curl si no está instalado
      apt:
        name: curl
        state: present    

    - name: Crear estructura de directorios
      file:
        path: /tmp/cse-agent
        state: directory
     
    - name: Descargar el paquete .deb
      get_url:
        url: "{{ url_installer }}"
        dest: "{{ local_installer_path }}"

    - name: Instalar el paquete .deb
      apt:
        deb: "{{ local_installer_path }}"
        state: present

    - name: Eliminar contenido del directorio temporal
      file:
        path: /tmp/cse-agent
        state: absent
    
      

#sudo systemctl status cisco-amp
#sudo systemctl restart cisco-amp
# ps aux | grep cisco
