---
- name: Verificacion de status de agente elastic Windows
  hosts: all
  vars:
    awx_url: 'https://awx.harso.com'
    status_ok: 'Status: HEALTHY'
    cert_thumbprint: 460bac6411726f1fd2a321dffbd976df6a603226
    cert_src_path: ./Certificado_ELK/ca.crt # nombre de certificado MUST be ca.crt
    msteams_webhook: https://harsomx.webhook.office.com/webhookb2/bf693546-8702-4185-9fbe-2ea27a6b65d7@40b6f753-6e95-4c0a-bd92-a9fcb653746a/IncomingWebhook/ed378f885ded4004ad39cc313f896e94/273ef0d1-397e-469b-b601-0b07a650d12a
    elastic_fqdn: hsoescluster-es-http.hsoeck.svc
    elastic_ip: 10.1.1.5
    fleetserver_fqdn: hso-fleet-server-agent-http.hsoeck.svc
    fleetserver_ip: 10.1.1.7
  tasks:

    - name: Validar si elastic agente se encuentra instalado
      ignore_errors: true
      ansible.windows.win_service:
        name: Elastic Agent
        start_mode: auto
        state: started
      register: elastic

    - name: Copiar Certificado en Servidor
      ansible.windows.win_copy:
        src: '{{ cert_src_path }}'
        dest: C:\Temp\

    - name: Instalar CA en Servidor
      ansible.windows.win_certificate_store:
        path: C:\Temp\ca.crt
        file_type: pem
        store_location: LocalMachine
        store_name: Root
        key_storage: machine
        state: present

    - name: Borrar contenido de directorio Temp
      ansible.windows.win_file:
        path: C:\Temp\
        state: absent
      register: result
      until: not result.failed
      retries: 3
      delay: 10

    - name: Configurar archivo host con fleet Server y Elastic Search
      community.windows.win_hosts:
        state: present
        canonical_name: "{{ item.nombre }}"
        ip_address: "{{ item.ip }}"
      loop:
        - { nombre: '{{ elastic_fqdn }}', ip: '{{ elastic_ip }}' }
        - { nombre: '{{ fleetserver_fqdn }}', ip: '{{ fleetserver_ip }}' }

    - name: Revisar status elastic-agent Powershell
      become: true
      become_method: runas
      become_user: SYSTEM
      ansible.windows.win_powershell:
        script: |
          cd "C:\Program Files\Elastic\Agent\"
          .\elastic-agent.exe status
      register: elastic_status
      when: elastic.exists

    - name: Send notification message via MS Teams
      community.general.office_365_connector_card:
        webhook: '{{ msteams_webhook }}'
        title: 'Elastic-Agent en {{ inventory_hostname }} {{ elastic_status.output[0] }}'
        color: E81123
        summary: 'Alerta servidor {{ inventory_hostname }}'
        sections:
          - title: 'Ansible playbook: **{{ ansible_play_name }}**'
            start_group: true
            activity_image: https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png
            activity_title: 'Server Name: **{{ ansible_facts.hostname }}**'
            activity_subtitle: 'Server IP: **{{ ansible_host }}**'
            activity_text:
            text: 'Datos del Servidor:'
            facts:
              - name: 'Sistema Operativo:'
                value: '{{ ansible_facts.os_name }}'
              - name: 'Dominio:'
                value: '{{ ansible_facts.domain }}'
            actions:
              - "@type": OpenUri
                name: RDP to Server
                targets:
                  - os: default
                    uri: 'rdp://{{ ansible_host }}=s:localhost'
              - "@type": OpenUri
                name: Entrar a AWX
                targets:
                  - os: default
                    uri: '{{ awx_url }}'
          - title: '**Alerta Server {{ ansible_facts.hostname }} -> IP: {{ ansible_host }}**'
            text: '{{ elastic_status.output | to_nice_yaml }}'
      delegate_to: localhost
      when: elastic_status.output[0] != status_ok
