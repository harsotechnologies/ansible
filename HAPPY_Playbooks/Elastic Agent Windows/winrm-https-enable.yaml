#---
#- name: Habilitar Winrm Https
#  hosts: all
#  gather_facts: no
#  become: yes
#  tasks:

#    - name: Ejecutar script powershell winrm enable
#     ignore_errors: true
#      become: true
#      become_method: runas
#      become_user: SYSTEM
#      ansible.windows.win_powershell:
#        script: |
#          iex(iwr -UseBasicParsing https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1).Content

#    - name: Enable WinRM Service
#      win_service:
#        name: winrm
#       start_mode: auto
#        state: started
#    - name: Configure WinRM Listeners
#      winrm_config_listener:
#        address: '10.1.1.6'
#        transport: http
#        certificate_path: "/api/v1/namespaces/awx/secrets/awx-receptor-ca"
#       certificate_thumbprint: "{{ ansible_local.win_cert.thumbprint }}"
#      register: winrm_result
#    - name: Print WinRM Configuration
#      debug:
#        var: winrm_result 

---

- name: Habilitar WinRM
  hosts: all
  gather_facts: no
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
  become: yes
  become_user: Administrador
  winrm_script: 
    $cert = New-SelfSignedCertificate -DnsName "localhost" -CertStoreLocation cert:\LocalMachine\My
    $thumbprint = $cert.Thumbprint
    $cmd = "winrm create winrm/config/Listener?Address=*+Transport=HTTP @{Hostname=`"localhost`";CertificateThumbprint=`"$thumbprint`"}"
    Invoke-Expression $cmd
    Set-NetFirewallRule -Name "WINRM-HTTP-In-TCP" -Enabled True
  tasks:
    - name: Ejecutar script de PowerShell
      win_shell: "{{ winrm_script }}"


